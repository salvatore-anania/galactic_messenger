plugins {
    id 'java'
    id 'org.springframework.boot' version "3.1.4"
	id 'io.spring.dependency-management' version '1.1.3'

}
description 'Serveur Rest utilisant le framework Spring Boot'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.google.guava:guava:32.1.1-jre'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

// Configuration du projet client
project(':app') {
    apply plugin: 'application'
    mainClassName = 'galactic_messenger.client.ClientMain'

    dependencies {
        // Ajoutez les dépendances spécifiques au client
    }

    // Tâche de création d'un JAR pour le client
    task clientJar(type: Jar) {
        from sourceSets.main.output
        archiveBaseName = 'galactic_messenger_client'
        manifest {
            attributes 'Main-Class': 'galactic_messenger.client.ClientMain'
        }
    }
}

// Configuration du projet serveur
project(':app') {
    apply plugin: 'application'
    mainClassName = 'galactic_test.server.ServerMain'

    dependencies {
        // Ajoutez les dépendances spécifiques au serveur
        
    }

    // Tâche de création d'un JAR pour le serveur
    task serverJar(type: Jar) {
        from sourceSets.main.output
        archiveBaseName = 'galactic_messenger_server'

        manifest {
            attributes 'Main-Class': 'galactic_test.server.ServerMain'
        }
    }
}

// Tâche pour générer les deux JARs
task generateJars(dependsOn: [':app:clientJar', ':app:serverJar']) {
    // Cette tâche n'a pas besoin de code spécifique, elle dépend simplement des tâches clientJar et serverJar.
}

